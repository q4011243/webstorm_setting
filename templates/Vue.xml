<templateSet group="Vue">
  <template name="vf" value="v-for=&quot;(item, index) in items&quot; :key=&quot;item.id&quot;" description="v-for" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="vvue" value="&lt;template&gt;&#10;#[[$END$]]#&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10;export default {&#10;name: '${COMPONENT_NAME}'&#10;}&#10;&lt;/script&gt;&#10;&#10;&lt;style scoped&gt;&#10;&#10;&lt;/style&gt;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="vstory" value="import Pivot from './Pivot.vue';&#10;&#10;export default {&#10;    title: 'Workout/Pivot',&#10;    component: Pivot,&#10;    decorators: [() =&gt; ({ template: '&lt;div class=&quot;preview-container&quot;&gt;&lt;story/&gt;&lt;/div&gt;' })],&#10;    parameters: {&#10;        docs: {&#10;            description: {&#10;                component: '',&#10;            },&#10;            source: {&#10;                code: `&#10;                    &lt;div&gt;这是一段测试代码&lt;/div&gt;&#10;                `&#10;            }&#10;        },&#10;    },&#10;};&#10;&#10;const Template = (args) =&gt; ({&#10;    components: { Pivot },&#10;    setup() {&#10;        return { args };&#10;    },&#10;    template: `&#10;        &lt;div class=&quot;max-w-[1440px]&quot;&gt;&#10;            &lt;Pivot v-bind=&quot;args&quot; /&gt;&#10;        &lt;/div&gt;&#10;    `,&#10;});&#10;&#10;export const Primary = Template.bind({});&#10;&#10;" description="storybook for vue" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
</templateSet>